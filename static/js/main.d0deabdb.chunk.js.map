{"version":3,"sources":["dogBreeds/Breed.js","dogBreeds/DogBreeds.js","dogBreeds/index.js","App.js","reportWebVitals.js","index.js"],"names":["Breed","name","useState","img","setImg","useEffect","a","axios","get","message","data","fetchImg","Card","CardTitle","CardThumbnail","Image","src","defaultProps","styled","div","DogBreeds","breeds","setBreeds","filterTerm","setFilterTerm","fetchBreeds","Container","StickyHeader","Input","type","placeholder","onInput","value","target","List","Object","keys","filter","includes","map","breed","ListItem","input","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAKMA,EAAQ,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACf,EAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAWA,OAVAC,qBAAU,YACM,uCAAG,8BAAAC,EAAA,sEAGLC,IAAMC,IAAN,oCAAuCP,EAAvC,YAHK,gBAELQ,EAFK,EAEbC,KAAQD,QAEVL,EAAOK,EAAQ,IAJA,2CAAH,qDAMdE,KACC,CAACV,IAGF,eAACW,EAAD,WACE,cAACC,EAAD,UAAYZ,IACZ,cAACa,EAAD,UACE,cAACC,EAAD,CAAOC,IAAKb,UAMLH,IAMfA,EAAMiB,aAAe,CACnBhB,KAAM,IAGR,I,UAAMc,EAAQG,IAAOf,IAAV,gJAQLS,EAAOM,IAAOC,IAAV,+KASJN,EAAYK,IAAOC,IAAV,qKAUTL,EAAgBI,IAAOC,IAAV,wCCjBJC,EA1CG,WAChB,MAA4BlB,mBAAS,IAArC,mBAAOmB,EAAP,KAAeC,EAAf,KACA,EAAoCpB,mBAAS,IAA7C,mBAAOqB,EAAP,KAAmBC,EAAnB,KACAnB,qBAAU,YACS,uCAAG,8BAAAC,EAAA,sEAGRC,IAAMC,IAAI,uCAHF,gBAERC,EAFQ,EAEhBC,KAAQD,QAEVa,EAAUb,GAJQ,2CAAH,qDAMjBgB,KACC,IAWH,OACE,eAACC,EAAD,WACE,cAACC,EAAD,UACE,cAACC,EAAD,CACEC,KAAK,OACLC,YAAY,qBACZC,QARY,SAAC,GAAD,IAAaC,EAAb,EAAGC,OAAUD,MAAb,OAA2BR,EAAcQ,QAWzD,cAACE,EAAD,UAjBYC,OAAOC,KAAKf,GACbgB,QACX,SAACpC,GAAD,MAAyB,KAAfsB,GAAqBtB,EAAKqC,SAASf,MAgBzBgB,KAAI,SAACC,GAAD,OACpB,cAACC,EAAD,UACE,cAAC,EAAD,CAAOxC,KAAMuC,eAUnBd,EAAYR,IAAOC,IAAV,6HAOTQ,EAAeT,IAAOC,IAAV,6OAaZe,EAAOhB,IAAOC,IAAV,saAkBJsB,EAAWvB,IAAOC,IAAV,0BAERS,EAAQV,IAAOwB,MAAV,6ECvFItB,ICQAuB,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d0deabdb.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst Breed = ({ name }) => {\n  const [img, setImg] = useState(\"\");\n  useEffect(() => {\n    const fetchImg = async () => {\n      const {\n        data: { message },\n      } = await axios.get(`https://dog.ceo/api/breed/${name}/images`);\n      setImg(message[0]);\n    };\n    fetchImg();\n  }, [name]);\n\n  return (\n    <Card>\n      <CardTitle>{name}</CardTitle>\n      <CardThumbnail>\n        <Image src={img} />\n      </CardThumbnail>\n    </Card>\n  );\n};\n\nexport default Breed;\n\nBreed.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n\nBreed.defaultProps = {\n  name: \"\",\n};\n\nconst Image = styled.img`\n  max-width: 300px;\n  /* max-height: 250px; */\n  min-witdh: 120px;\n  object-fit: cover;\n  border-radius: 10px;\n`;\n\nconst Card = styled.div`\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border: 1px solter\n  border-radius: 5px;\n  position: relative;\n`;\n\nconst CardTitle = styled.div`\n  font-size: 24px;\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n  color: white;\n  position: absolute;\n  bottom: 0px;\n  left: 5px;\n`;\n\nconst CardThumbnail = styled.div`\n  flex: 1;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport Breed from \"./Breed\";\n\nconst DogBreeds = () => {\n  const [breeds, setBreeds] = useState([]);\n  const [filterTerm, setFilterTerm] = useState(\"\");\n  useEffect(() => {\n    const fetchBreeds = async () => {\n      const {\n        data: { message },\n      } = await axios.get(\"https://dog.ceo/api/breeds/list/all\");\n      setBreeds(message);\n    };\n    fetchBreeds();\n  }, []);\n\n  const filteredBreeds = () => {\n    const names = Object.keys(breeds);\n    return names.filter(\n      (name) => filterTerm === \"\" || name.includes(filterTerm)\n    );\n  };\n\n  const handleInput = ({ target: { value } }) => setFilterTerm(value);\n\n  return (\n    <Container>\n      <StickyHeader>\n        <Input\n          type=\"text\"\n          placeholder=\"filter by breed...\"\n          onInput={handleInput}\n        />\n      </StickyHeader>\n      <List>\n        {filteredBreeds().map((breed) => (\n          <ListItem>\n            <Breed name={breed}></Breed>\n          </ListItem>\n        ))}\n      </List>\n    </Container>\n  );\n};\n\nexport default DogBreeds;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst StickyHeader = styled.div`\n  position: fixed;\n  z-index: 1000;\n  height: 50px;\n  top: 0;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  backdrop-filter: blur(10px);\n  padding: 0.5rem 1rem;\n`;\n\nconst List = styled.div`\n  display: grid;\n  justify-items: center;\n  grid-template-columns: repeat(1, minmax(100px, 1fr));\n  grid-auto-rows: minmax(100px, auto);\n  grid-auto-flow: row;\n  gap: 10px;\n  margin-top: 80px;\n\n  @media (min-width: 600px) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media (min-width: 900px) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n`;\n\nconst ListItem = styled.div``;\n\nconst Input = styled.input`\n  padding: 0.5rem 1rem;\n  margin-bottom: 1rem;\n`;\n","import DogBreeds from \"./DogBreeds\";\n\nexport default DogBreeds;\n","import DogBreeds from \"./dogBreeds\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DogBreeds />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}